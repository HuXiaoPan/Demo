#  Project: i-Navi
#  
#
# (c) Copyright 2014-2015
#
# All rights reserved.

set(CMAKE_SYSTEM_NAME Linux)
set(CMAKE_SYSTEM_PROCESSOR i586)

set(PROJECT intelkc-x86)

set(TARGET_KC22 ON)

set(TOOLCHAIN_HOME /opt/ias/kc-2.2-sdk-ia32-toolchain/i586-tizen-linux-gnu/bin )
set(TOOLCHAIN_PREFIX i586-tizen-linux-gnu- )
if (IAS_SYSROOT)
  set(IAS_SYSROOT ${IAS_SYSROOT} CACHE PATH "Sysroot path")
else()
  set(IAS_SYSROOT $ENV{IAS_SYSROOT})
endif()

if (IAS_SYSROOT STREQUAL "")
  message( FATAL_ERROR "ERROR: No sysroot set!")
endif()

set( CMAKE_C_LINK_FLAGS        " --sysroot=${IAS_SYSROOT} " CACHE STRING "C-LINK-FLAGS" )
set( CMAKE_CXX_LINK_FLAGS      " --sysroot=${IAS_SYSROOT} " CACHE STRING "CXX-LINK-FLAGS" )
set( CMAKE_SHARED_LINKER_FLAGS " --sysroot=${IAS_SYSROOT} " CACHE STRING "LDFLAGS" )

set(CMAKE_C_FLAGS_INIT "--sysroot=${IAS_SYSROOT}" CACHE STRING "C compile flags" )
set(CMAKE_CXX_FLAGS_INIT "--sysroot=${IAS_SYSROOT} -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS" CACHE STRING "C++ compile flags" )

if (DEFINED IAS_COVERAGE_BUILD)
  set(CMAKE_C_COMPILER "${IAS_BULLSEYE_BIN_DIR}/covc")
  set(CMAKE_C_COMPILER_ARG1 "-i ${TOOLCHAIN_HOME}/${TOOLCHAIN_PREFIX}gcc")
  set(CMAKE_CXX_COMPILER "${IAS_BULLSEYE_BIN_DIR}/covc")
  set(CMAKE_CXX_COMPILER_ARG1 "-i ${TOOLCHAIN_HOME}/${TOOLCHAIN_PREFIX}g++")
  set(IAS_BULLSEYE_LIBS ${IAS_BULLSEYE_LIB_DIR}/libcov32.a pthread)
else ()
  set(CMAKE_C_COMPILER ${TOOLCHAIN_HOME}/${TOOLCHAIN_PREFIX}gcc)
  set(CMAKE_CXX_COMPILER ${TOOLCHAIN_HOME}/${TOOLCHAIN_PREFIX}g++)
endif()

set(CMAKE_FIND_ROOT_PATH ${IAS_SYSROOT} ${IAS_SYSROOT}/usr/lib)
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)

set(ENV{PKG_CONFIG_SYSROOT_DIR} ${IAS_SYSROOT})
set(ENV{PKG_CONFIG_LIBDIR} ${IAS_SYSROOT}/usr/lib/pkgconfig:${IAS_SYSROOT}/usr/share/pkgconfig)
set(PKG_CONFIG_SYSROOT_DIR ${IAS_SYSROOT})
set(PKG_CONFIG_LIBDIR ${IAS_SYSROOT}/usr/lib/pkgconfig:${IAS_SYSROOT}/usr/share/pkgconfig)

if (NOT DEFINED CMAKE_INSTALL_PREFIX)
  set(CMAKE_INSTALL_PREFIX "/opt/easydrive")
endif()

set(CMAKE_CROSSCOMPILING TRUE)
